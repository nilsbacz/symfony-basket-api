openapi: 3.0.3
info:
    title: Basket API
    version: 1.0.0
paths:
    /api/baskets:
        post:
            summary: Create a new basket
            tags:
                - Baskets
            responses:
                '201':
                    description: Basket created
                    headers:
                        Location:
                            description: URL of the created basket
                            schema: { type: string, format: uri }
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id: { type: integer, example: 1 }
                                    createdAt: { type: string, format: date-time }
    /api/baskets/{id}:
        get:
            summary: Get a basket by id
            parameters:
                - in: path
                  name: id
                  required: true
                  schema: { type: integer }
            tags:
                - Baskets
            responses:
                '200':
                    description: Basket details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id: { type: integer }
                                    createdAt: { type: string, format: date-time }
                                    items:
                                        type: array
                                        items:
                                            type: object
    /api/baskets/{id}/items:
        post:
            summary: Add a product to a basket
            description: >
                Adds a product to the specified basket.
                If the product already exists in the basket, its quantity will be increased.
            parameters:
                -   in: path
                    name: id
                    required: true
                    schema:
                        type: integer
                    description: ID of the basket to modify
            tags:
                - Baskets
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - productId
                            properties:
                                productId:
                                    type: integer
                                    example: 2
                                amount:
                                    type: integer
                                    example: 3
                                    description: Quantity of the product to add (defaults to 1)
            responses:
                '200':
                    description: Product added or quantity updated
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: integer
                                        example: 1
                                    createdAt:
                                        type: string
                                        format: date-time
                                        example: "2025-10-11T12:10:06+00:00"
                                    items:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    example: 1
                                                productId:
                                                    type: integer
                                                    example: 2
                                                quantity:
                                                    type: integer
                                                    example: 3
                '404':
                    description: Basket or product not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        example: basket not found
    /api/baskets/{id}/items/{itemId}:
        delete:
            summary: Remove a product item from a basket
            description: |
                Deletes the specified basket item from the given basket.
                If the item does not belong to the basket or cannot be found, a 404 error is returned.
            tags:
                - Baskets
            parameters:
                -   name: id
                    in: path
                    required: true
                    description: ID of the basket
                    schema:
                        type: integer
                -   name: itemId
                    in: path
                    required: true
                    description: ID of the basket item to remove
                    schema:
                        type: integer
            responses:
                "204":
                    description: Basket item successfully removed (no content)
                "404":
                    description: Basket or basket item not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        example: item does not belong to this basket
        patch:
            summary: Update an item in a basket
            description: |
                Updates the quantity of an existing item in the specified basket.
                If the quantity is set to 0, the item will be removed from the basket.
            tags:
                - Baskets
            parameters:
                -   name: id
                    in: path
                    required: true
                    schema:
                        type: integer
                    description: The ID of the basket.
                -   name: itemId
                    in: path
                    required: true
                    schema:
                        type: integer
                    description: The ID of the basket item to update.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - quantity
                            properties:
                                quantity:
                                    type: integer
                                    minimum: 0
                                    description: |
                                        New quantity for this basket item.
                                        Setting to 0 will remove the item from the basket.
                            example:
                                quantity: 2
            responses:
                '204':
                    description: Item successfully updated or removed. No content returned.
                '400':
                    description: Invalid request (e.g., missing or non-integer quantity).
                '404':
                    description: Basket or basket item not found, or item does not belong to this basket.
                '422':
                    description: Invalid quantity (e.g., negative value).
                '500':
                    description: Unexpected server error.

    /api/products:
        get:
            summary: Get a sorted list of all active products in stock
            tags:
                - Products
            responses:
                '200':
                    description: Basket details
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: integer
                                            example: 4
                                        name:
                                            type: string
                                            example: "27-inch Monitor"
                                        quantity:
                                            type: integer
                                            example: 10
                                        active:
                                            type: boolean
                                            example: true
                                        price:
                                            type: integer
                                            example: 19999
                            examples:
                                success:
                                    summary: Example product list
                                    value:
                                        -   id: 4
                                            name: "27-inch Monitor"
                                            quantity: 10
                                            active: true
                                            price: 19999
                                        -   id: 2
                                            name: "Mechanical Keyboard"
                                            quantity: 20
                                            active: true
                                            price: 7999
                                        -   id: 3
                                            name: "USB-C Cable"
                                            quantity: 100
                                            active: true
                                            price: 999
                                        -   id: 5
                                            name: "Webcam HD"
                                            quantity: 15
                                            active: true
                                            price: 4999
                                        -   id: 1
                                            name: "Wireless Mouse"
                                            quantity: 50
                                            active: true
                                            price: 2999
