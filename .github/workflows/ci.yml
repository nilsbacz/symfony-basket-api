name: CI

on:
    push:
        branches: [ "**" ]
    pull_request:

jobs:
    tests:
        runs-on: ubuntu-latest

        services:
            mysql:
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: rootsecret
                ports: [ "3306:3306" ]
                options: >-
                    --health-cmd="mysqladmin ping -h 127.0.0.1 -prootsecret"
                    --health-interval=5s --health-timeout=5s --health-retries=20

        env:
            APP_ENV: test
            APP_DEBUG: 0
            DATABASE_URL: "mysql://root:rootsecret@127.0.0.1:3306/basket_test?serverVersion=8.0&charset=utf8mb4"

        steps:
            -   uses: actions/checkout@v4

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.3'
                    extensions: mbstring, intl, pdo_mysql, zip
                    coverage: pcov        # << enable coverage in CI
                    tools: composer:v2

            -   name: Install Composer deps
                run: composer install --no-interaction --prefer-dist --no-progress

            -   name: Lint (Symfony)
                run: composer lint:symfony

            -   name: Lint (PHP_CodeSniffer)
                run: composer lint:phpcs

            -   name: Static analysis (PHPStan)
                run: composer lint:phpstan

            -   name: Wait for MySQL
                run: |
                    for i in {1..120}; do
                      mysqladmin ping -h 127.0.0.1 -prootsecret && break
                      sleep 1
                    done

            -   name: Create database (if needed)
                run: php bin/console doctrine:database:create --if-not-exists --env=test

            -   name: Run migrations
                run: php bin/console doctrine:migrations:migrate --no-interaction --env=test

            # Run tests with coverage (PCOV already enabled by setup-php)
            -   name: Run tests (with coverage)
                run: |
                    ./vendor/bin/phpunit \
                      --colors=always \
                      --coverage-text \
                      --coverage-html var/coverage/html

            # Upload HTML coverage as artifact
            -   name: Upload coverage report
                if: always()
                uses: actions/upload-artifact@v4
                with:
                    name: coverage-html
                    path: var/coverage/html
